#!/bin/bash

# PBS script for Futoshiki MPI performance testing
#PBS -N futoshiki_scaling_mpi
#PBS -q short_cpuQ
#PBS -l walltime=06:00:00
#PBS -l select=128:ncpus=1:mem=8gb
#PBS -l place=excl

# This script expects PUZZLE_FILE to be passed from the environment via `qsub -v`
if [ -z "$PUZZLE_FILE" ]; then
    echo "ERROR: PUZZLE_FILE environment variable not set."
    echo "Please use 'qsub -v PUZZLE_FILE=path/to/puzzle.txt futoshiki_scaling_mpi.pbs'"
    exit 1
fi

# Change to submission directory
cd $PBS_O_WORKDIR

# Load modules
module load gcc91
module load mpich-3.2

# Build the MPI version
echo "Building MPI version..."
make clean
make mpi

if [ ! -f bin/mpi ]; then
    echo "Build failed!"
    exit 1
fi

echo ""
echo "====================================="
echo "Futoshiki MPI Performance Testing"
echo "====================================="
echo "Job ID: $PBS_JOBID"
echo "Node: $(hostname)"
echo "Available Cores: $PBS_NCPUS"
echo "Date: $(date)"
echo "Puzzle: $PUZZLE_FILE"
echo ""

# --- MPI Scaling Test ---
echo "============================================"
echo "MPI Scaling Test (on a single node)"
echo "============================================"
for procs in 1 2 4 8 16 32 64 128; do
    # Skip if procs > available cores
    if [ "$procs" -gt "$PBS_NCPUS" ]; then continue; fi

    echo "--- Testing: mpi with $procs process(es) ---"
    mpirun.actual -np "$procs" ./bin/mpi "$PUZZLE_FILE" 
    echo ""
done

echo "MPI performance testing completed at $(date)"
