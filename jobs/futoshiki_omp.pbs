#!/bin/bash

# PBS script for OpenMP Futoshiki solver
#PBS -N futoshiki_omp

# Max walltime 6h
#PBS -q short_cpuQ
# Expected timespan for execution
#PBS -l walltime=00:10:00
# Chunks (~ Nodes) : Cores per chunk : Shared memory per chunk
#PBS -l select=1:ncpus=64:mem=8gb
# Exclusive nodes
#PBS -l place=excl

# Change to submission directory
cd $PBS_O_WORKDIR

# Load modules
module load openmpi-4.0.4

# Build
echo "Building OpenMP version..."
make clean
make openmp

if [ ! -f bin/futoshiki_omp ]; then
    echo "Build failed!"
    exit 1
fi

# System information
echo "======================="
echo "Futoshiki OpenMP Solver"
echo "======================="
echo "Job ID: $PBS_JOBID"
echo "Node: $(hostname)"
echo "Date: $(date)"
echo ""

# OpenMP settings
export OMP_PROC_BIND=close
export OMP_PLACES=cores

# Function to run test
run_test() {
    local threads=$1
    local puzzle=$2
    
    echo "--- Testing with $threads threads ---"
    export OMP_NUM_THREADS=$threads
    time ./bin/futoshiki_omp $puzzle
    echo ""
}

# Default puzzle if not specified
if [ -z "$PUZZLE_FILE" ]; then
    PUZZLE_FILE="puzzles/9x9_extreme1.txt"
fi

echo "Puzzle: $PUZZLE_FILE"
echo ""

# Run scaling tests
for threads in 1 2 4 8 16 32 64; do
    run_test $threads "$PUZZLE_FILE"
done

echo "Job completed at $(date)"