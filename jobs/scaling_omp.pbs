#!/bin/bash

# PBS script for Futoshiki OpenMP performance testing
#PBS -N futoshiki_scaling_omp
#PBS -q short_cpuQ
#PBS -l walltime=06:00:00
#PBS -l select=1:ncpus=64:mem=8gb
#PBS -l place=excl

# This script expects PUZZLE_FILE to be passed from the environment via `qsub -v`
if [ -z "$PUZZLE_FILE" ]; then
    echo "ERROR: PUZZLE_FILE environment variable not set."
    echo "Please use 'qsub -v PUZZLE_FILE=path/to/puzzle.txt futoshiki_scaling_omp.pbs'"
    exit 1
fi

# Change to submission directory
cd $PBS_O_WORKDIR

# Load modules
module load openmpi-4.0.4

# Build the OpenMP version
echo "Building OpenMP version..."
make omp

if [ ! -f bin/futoshiki_omp ]; then
    echo "Build failed!"
    exit 1
fi

echo ""
echo "====================================="
echo "Futoshiki OpenMP Performance Testing"
echo "====================================="
echo "Job ID: $PBS_JOBID"
echo "Node: $(hostname)"
echo "Available Cores: $PBS_NCPUS"
echo "Date: $(date)"
echo "Puzzle: $PUZZLE_FILE"
echo ""

# --- OpenMP Scaling Test ---
echo "============================================"
echo "OpenMP Scaling Test"
echo "============================================"
for threads in 1 2 4 8 16 32 64; do
    # Skip if threads > available cores
    if [ "$threads" -gt "$PBS_NCPUS" ]; then continue; fi

    echo "--- Testing: openmp with $threads thread(s) ---"
    export OMP_NUM_THREADS=$threads
    export OMP_PROC_BIND=close
    export OMP_PLACES=cores
    ./bin/omp "$PUZZLE_FILE"
    echo ""
done

echo "OpenMP performance testing completed at $(date)"
