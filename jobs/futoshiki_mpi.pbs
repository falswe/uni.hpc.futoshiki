#!/bin/bash

# PBS script for MPI Futoshiki solver
#PBS -N futoshiki_mpi

# Max walltime 6h
#PBS -q short_cpuQ
# Expected timespan for execution
#PBS -l walltime=00:10:00
# Chunks (~ Nodes) : Cores per chunk : Shared memory per chunk
#PBS -l select=16:ncpus=1:mem=8gb
# Exclusive nodes
#PBS -l place=excl

# Change to submission directory
cd $PBS_O_WORKDIR

# Load necessary modules
module load openmpi-4.0.4

# Build
echo "Building MPI version..."
make clean
make mpi

if [ ! -f bin/futoshiki_mpi ]; then
    echo "Build failed!"
    exit 1
fi

echo "Build successful"
echo ""

# System information
echo "===================="
echo "Futoshiki MPI Solver"
echo "===================="
echo "Job ID: $PBS_JOBID"
echo "Node: $(hostname)"
echo "Cores available: $(nproc)"
echo "Date: $(date)"
echo "Working directory: $PBS_O_WORKDIR"
echo ""

# Function to run a test
run_test() {
    local nprocs=$1
    local puzzle=$2
    local name=$(basename $puzzle .txt)

    echo "======================================"
    echo "Running $name with $nprocs processes"
    echo "======================================"

    time mpirun -np $nprocs ./bin/futoshiki_mpi $puzzle

    echo ""
}

# Scaling tests with different process counts
for nprocs in 1 2 4 8 16
do
    echo "############################################"
    echo "# Testing with $nprocs MPI processes"
    echo "############################################"
    
    run_test $nprocs "examples/hard/9x9_extreme1.txt"
done

echo ""
echo "Job completed at $(date)"
