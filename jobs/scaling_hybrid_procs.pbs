#!/bin/bash

# PBS script for Futoshiki Hybrid (MPI+OpenMP) performance testing (scaling processes)
#PBS -N futoshiki_scaling_hybrid_procs
#PBS -q short_cpuQ
#PBS -l walltime=06:00:00
# We request a large number of nodes for the process scaling
#PBS -l select=128:ncpus=16:mem=8gb
#PBS -l place=excl

# This script expects PUZZLE_FILE to be passed from the environment via `qsub -v`
if [ -z "$PUZZLE_FILE" ]; then
    echo "ERROR: PUZZLE_FILE environment variable not set."
    echo "Please use 'qsub -v PUZZLE_FILE=path/to/puzzle.txt ...'"
    exit 1
fi

# Change to submission directory
cd $PBS_O_WORKDIR

# Load modules
module load mpich-3.2

# Build the Hybrid version
echo "Building Hybrid version..."
make hybrid

if [ ! -f bin/futoshiki_hybrid ]; then
    echo "Build failed!"
    exit 1
fi

echo ""
echo "====================================="
echo "Futoshiki Hybrid Performance Testing (Scaling Processes)"
echo "====================================="
echo "Job ID: $PBS_JOBID"
echo "Node: $(hostname)"
echo "Available Cores: $PBS_NCPUS"
echo "Date: $(date)"
echo "Puzzle: $PUZZLE_FILE"
echo ""

# --- Hybrid Scaling Test (Fixed OMP Threads, Scaling MPI Procs) ---
OMP_THREADS=16
echo "============================================"
echo "Hybrid Scaling Test (OMP_THREADS=$OMP_THREADS)"
echo "============================================"
for procs in 1 2 4 8 16 32 64 128; do
    # Skip if procs > available cores
    if [ "$procs" -gt "$PBS_NCPUS" ]; then continue; fi

    echo "--- Testing: hybrid with $procs processes and $OMP_THREADS threads ---"
    export OMP_NUM_THREADS=$OMP_THREADS
    export OMP_PROC_BIND=close
    export OMP_PLACES=cores
    mpirun.actual -np "$procs" ./bin/hybrid "$PUZZLE_FILE"
    echo ""
done

echo "Hybrid performance testing completed at $(date)"
